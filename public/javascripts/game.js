// Generated by CoffeeScript 1.3.3
(function() {
  var Game;

  window.Game = Game = (function() {
    var canvas_height, canvas_width, down_pressed, height, my_y, up_pressed, width;

    canvas_width = 700;

    canvas_height = 400;

    height = 55;

    width = 10;

    Game.key_left = 37;

    Game.key_up = 38;

    Game.key_right = 39;

    Game.key_down = 40;

    up_pressed = false;

    down_pressed = false;

    my_y = 10;

    Game.dy = 5;

    function Game() {}

    Game.prototype.drawRacket = function(x, y, color) {
      this.ctx.fillStyle = color;
      return this.ctx.fillRect(x, y, width, height);
    };

    Game.prototype.drawBall = function(x, y) {
      this.ctx.fillStyle = "rgb(100, 100, 0)";
      this.ctx.arc(x, y, 5, 0, Math.PI * 2, true);
      return this.ctx.fill();
    };

    Game.prototype.drawBoard = function() {
      this.processInputs();
      this.ctx.clearRect(0, 0, canvas_width, canvas_height);
      this.drawRacket(10, my_y, "rgb(200,0,0)");
      this.drawRacket(680, 10, "rgb(0,0,200)");
      return this.drawBall(100, 100);
    };

    Game.prototype.keyboardDown = function(evt) {
      switch (evt.which) {
        case Game.key_down:
          down_pressed = true;
          return up_pressed = false;
        case Game.key_up:
          up_pressed = true;
          return down_pressed = false;
      }
    };

    Game.prototype.keyboardUp = function(evt) {
      switch (evt.which) {
        case Game.key_down:
          return down_pressed = false;
        case Game.key_up:
          return up_pressed = false;
      }
    };

    Game.prototype.processInputs = function() {
      if (up_pressed) {
        return my_y -= Game.dy;
      } else if (down_pressed) {
        return my_y += Game.dy;
      }
    };

    Game.prototype.startGame = function() {
      var canvas, self;
      canvas = document.getElementById('game_board_canvas');
      this.ctx = canvas.getContext('2d');
      this.drawBoard();
      $(window).on('keydown', this.keyboardDown);
      $(window).on('keyup', this.keyboardUp);
      self = this;
      return setInterval((function() {
        return self.drawBoard();
      }), 20);
    };

    Game.prototype.start = function(socket) {
      socket.on('connect', function() {
        return console.log("Socket opened, Master!");
      });
      socket.on('state', function(data) {
        return console.log("Whoa, he moved");
      });
      socket.on('joined', function(side) {
        return console.log("I'm at " + side + " side");
      });
      socket.emit('join');
      socket.emit('state', {
        moved: Math.random()
      });
      return this.startGame();
    };

    return Game;

  })();

}).call(this);
